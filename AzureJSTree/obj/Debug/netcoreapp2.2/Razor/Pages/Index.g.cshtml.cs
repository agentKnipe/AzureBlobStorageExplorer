#pragma checksum "C:\Users\aknipe\source\repos\AzureJSTree\AzureJSTree\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "be542e502035240f8cb70479e8210e73f8c11e8d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AzureJSTree.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Index.cshtml", typeof(AzureJSTree.Pages.Pages_Index), null)]
namespace AzureJSTree.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\aknipe\source\repos\AzureJSTree\AzureJSTree\Pages\_ViewImports.cshtml"
using AzureJSTree;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"be542e502035240f8cb70479e8210e73f8c11e8d", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"190c870a8509816b6982b7c86eeafe47661b4de6", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "C:\Users\aknipe\source\repos\AzureJSTree\AzureJSTree\Pages\Index.cshtml"
  
    ViewData["Title"] = "Home page";

#line default
#line hidden
            BeginContext(71, 740, true);
            WriteLiteral(@"
<link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/jstree/3.3.3/themes/default/style.min.css"" />
<link rel=""stylesheet"" href=""https://use.fontawesome.com/releases/v5.7.2/css/all.css"" integrity=""sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr"" crossorigin=""anonymous"">

<div class=""text-center"">
    <h1 class=""display-4"">Azure Blob Storage Explorer</h1>
    <span style=""font-size:smaller;"">Select from the tree below to see the folders contents. You can additional expand the tree to see sub folders.</span>
    <div class=""row"">
        <div id=""jsTree"" class=""col-md-2""></div>
        <div id=""files"" class=""col-md-9""></div>
        <div class=""col-md-1""></div>
    </div>
</div>

");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(828, 3238, true);
                WriteLiteral(@"
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/jstree/3.3.3/jstree.min.js""></script>
    <script>
        $(document).ready(function () {
            $('#jsTree')
                .on('select_node.jstree', function (e, data) {
                    GetDirectoryContents(data.node.id);
                })
                .jstree({
                    'plugins': ['themes', 'json_data', 'ui', 'types'],
                    'types': {
                        ""default"": {
                            ""icon"": ""fa fa-folder""
                        }
                    },
                    'core': {
                        'data': {
                            'type': 'POST',
                            'url': 'Storage/GetNode',
                            'contentType': ""application/json; charset=utf-8"",
                            'dataType': ""json"",
                            'data': function (node) {
                                return '{NodeID:""' + node.id + '""}'
               ");
                WriteLiteral(@"             },
                            ""success"": function (new_data) {
                                return new_data;
                            }
                        }
                    }
                });

            $(""#files"").on('click', '.directory', function () {
                var parentNodeID = $(this).data('parent');
                var selectedNodeID = this.id;

                $.jstree.reference('#jsTree').open_node(parentNodeID
                    , function (parentNodeID) {
                        $.jstree.reference('#jsTree').deselect_node(parentNodeID, selectNode(selectedNodeID));
                    });
            });
        });

        function selectNode(SelectedNodeID) {
            $.jstree.reference('#jsTree').select_node(SelectedNodeID);
        }

        function GetDirectoryContents(NodeID) {
            $.ajax({
                type: ""POST"",
                url: ""Storage/GetNodeContents"",
                contentType: ""application/json");
                WriteLiteral(@"; charset=utf-8"",
                dataType: ""json"",
                data: '{NodeID:""' + NodeID + '""}',
                success: function (msg) {
                    $('#files').empty();

                    var html = '<div class=""row"">';

                    for (obj in msg) {
                        debugger;
                        var newObj = msg[obj];
                        if (newObj.cssClass == ""directory"") {
                            html += '<div class=""col-md-3 ' + newObj.cssClass + '"" id=""' + newObj.id + '"" data-parent=""' + newObj.parent + '"" style=""text-align:center;""><div style=""font-size:30px;""><i class=""fa fa-folder""></i></div><div>' + newObj.text + '</div></div>'
                        }
                        else {
                            html += '<div class=""col-md-3 ' + newObj.cssClass + '"" style=""text-align:center;""><a href=""' + newObj.uri + '""><img src=""' + newObj.uri + '"" width=""150px""><div>' + newObj.text + '</div></a></div>'
                        }
       ");
                WriteLiteral("             }\r\n                    html += \'</div > \';\r\n                    $(\'#files\').append(html);\r\n                }\r\n            });\r\n        }\r\n    </script>\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
